<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[cloudmusic android team dev_blog]]></title>
  <link href="http://cloudmusic.github.io/atom.xml" rel="self"/>
  <link href="http://cloudmusic.github.io/"/>
  <updated>2014-10-24T13:19:33+08:00</updated>
  <id>http://cloudmusic.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    <email><![CDATA[androidfb@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用FragmentPagerAdapter的fragment第二次打开不能显示内容的问题分析]]></title>
    <link href="http://cloudmusic.github.io/blog/2014/10/24/fragmentpageradapter-doesnt-show-fragment-secondtime/"/>
    <updated>2014-10-24T11:03:20+08:00</updated>
    <id>http://cloudmusic.github.io/blog/2014/10/24/fragmentpageradapter-doesnt-show-fragment-secondtime</id>
    <content type="html"><![CDATA[<p>在使用viewpager的时候有两个adapter：FragmentPagerAdapter和FragmentStatePagerAdapter，区别在于他们的instantiateItem方法是不一样的：</p>

<p>FragmentPagerAdapter</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">public</span> <span class="n">Object</span> <span class="nf">instantiateItem</span><span class="o">(</span><span class="n">ViewGroup</span> <span class="n">container</span><span class="o">,</span> <span class="kt">int</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mCurTransaction</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">mCurTransaction</span> <span class="o">=</span> <span class="n">mFragmentManager</span><span class="o">.</span><span class="na">beginTransaction</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">final</span> <span class="kt">long</span> <span class="n">itemId</span> <span class="o">=</span> <span class="n">getItemId</span><span class="o">(</span><span class="n">position</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Do we already have this fragment?</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">makeFragmentName</span><span class="o">(</span><span class="n">container</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="n">itemId</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Fragment</span> <span class="n">fragment</span> <span class="o">=</span> <span class="n">mFragmentManager</span><span class="o">.</span><span class="na">findFragmentByTag</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">fragment</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">DEBUG</span><span class="o">)</span> <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Attaching item #&quot;</span> <span class="o">+</span> <span class="n">itemId</span> <span class="o">+</span> <span class="s">&quot;: f=&quot;</span> <span class="o">+</span> <span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>            <span class="n">mCurTransaction</span><span class="o">.</span><span class="na">attach</span><span class="o">(</span><span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">fragment</span> <span class="o">=</span> <span class="n">getItem</span><span class="o">(</span><span class="n">position</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">DEBUG</span><span class="o">)</span> <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Adding item #&quot;</span> <span class="o">+</span> <span class="n">itemId</span> <span class="o">+</span> <span class="s">&quot;: f=&quot;</span> <span class="o">+</span> <span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>            <span class="n">mCurTransaction</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">container</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="n">fragment</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">makeFragmentName</span><span class="o">(</span><span class="n">container</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="n">itemId</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">fragment</span> <span class="o">!=</span> <span class="n">mCurrentPrimaryItem</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">fragment</span><span class="o">.</span><span class="na">setMenuVisibility</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>            <span class="n">fragment</span><span class="o">.</span><span class="na">setUserVisibleHint</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">fragment</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>FragmentStatePagerAdapter</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">public</span> <span class="n">Object</span> <span class="nf">instantiateItem</span><span class="o">(</span><span class="n">ViewGroup</span> <span class="n">container</span><span class="o">,</span> <span class="kt">int</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// If we already have this item instantiated, there is nothing</span>
</span><span class='line'>        <span class="c1">// to do.  This can happen when we are restoring the entire pager</span>
</span><span class='line'>        <span class="c1">// from its saved state, where the fragment manager has already</span>
</span><span class='line'>        <span class="c1">// taken care of restoring the fragments we previously had instantiated.</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mFragments</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Fragment</span> <span class="n">f</span> <span class="o">=</span> <span class="n">mFragments</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">position</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">f</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">f</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mCurTransaction</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mCurTransaction</span> <span class="o">=</span> <span class="n">mFragmentManager</span><span class="o">.</span><span class="na">beginTransaction</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Fragment</span> <span class="n">fragment</span> <span class="o">=</span> <span class="n">getItem</span><span class="o">(</span><span class="n">position</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">DEBUG</span><span class="o">)</span> <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Adding item #&quot;</span> <span class="o">+</span> <span class="n">position</span> <span class="o">+</span> <span class="s">&quot;: f=&quot;</span> <span class="o">+</span> <span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mSavedState</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Fragment</span><span class="o">.</span><span class="na">SavedState</span> <span class="n">fss</span> <span class="o">=</span> <span class="n">mSavedState</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">position</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">fss</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">fragment</span><span class="o">.</span><span class="na">setInitialSavedState</span><span class="o">(</span><span class="n">fss</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="n">mFragments</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mFragments</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">fragment</span><span class="o">.</span><span class="na">setMenuVisibility</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>        <span class="n">fragment</span><span class="o">.</span><span class="na">setUserVisibleHint</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mFragments</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">position</span><span class="o">,</span> <span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mCurTransaction</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">container</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">fragment</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>FragmentPagerAdapter会将adapter的每个fragment加入fragmentManager管理，如果初始化adapter传的是getSupportFragmentManager(),则每个fragment都会放到activity的fragmentManager里面去。这样就会造成当viewpager所在的fragment因为popFromBackStack被移除后，再次add一次viewpager所在的fragment，viewpager里面不会显示出来fragment内容。原因是这样的：</p>

<p>第一次FragmentPagerAdapter的instantiateItem方法会把每个fragment加入activity的fragmentManager当中，popFromBackStack这个viewpager所在的fragment时，并不会将viewpager里面的每个fragment调用detach。第二次就会发现fragment已经存在，则直接调用mCurTransaction.attach方法，而attachFragment方法缺发现fragment未被detach则直接跳过了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">attachFragment</span><span class="o">(</span><span class="n">Fragment</span> <span class="n">fragment</span><span class="o">,</span> <span class="kt">int</span> <span class="n">transition</span><span class="o">,</span> <span class="kt">int</span> <span class="n">transitionStyle</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">DEBUG</span><span class="o">)</span> <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;attach: &quot;</span> <span class="o">+</span> <span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">fragment</span><span class="o">.</span><span class="na">mDetached</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">fragment</span><span class="o">.</span><span class="na">mDetached</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(!</span><span class="n">fragment</span><span class="o">.</span><span class="na">mAdded</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">mAdded</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">mAdded</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Fragment</span><span class="o">&gt;();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">mAdded</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">fragment</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalStateException</span><span class="o">(</span><span class="s">&quot;Fragment already added: &quot;</span> <span class="o">+</span> <span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">DEBUG</span><span class="o">)</span> <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;add from attach: &quot;</span> <span class="o">+</span> <span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>                <span class="n">mAdded</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">fragment</span><span class="o">);</span>
</span><span class='line'>                <span class="n">fragment</span><span class="o">.</span><span class="na">mAdded</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">fragment</span><span class="o">.</span><span class="na">mHasMenu</span> <span class="o">&amp;&amp;</span> <span class="n">fragment</span><span class="o">.</span><span class="na">mMenuVisible</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">mNeedMenuInvalidate</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">moveToState</span><span class="o">(</span><span class="n">fragment</span><span class="o">,</span> <span class="n">mCurState</span><span class="o">,</span> <span class="n">transition</span><span class="o">,</span> <span class="n">transitionStyle</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果使用FragmentStatePagerAdapter则不会出现这个问题，它自己内部使用mFragments数组维持fragment缓存，因为我们重新打开viewpager所在的fragment时，重新初始化了一个新的viewpager adapter，所以其实始终没用到这个缓存，每次都会重新使用getItem来new出来新fragment，然后调用mCurTransaction.add加入。</p>

<h2>要避免这个问题有几种方法：</h2>

<p>1.使用FragmentStatePagerAdapter
2.初始化viewpager的adapter的时候不要使用getSupportFragmentManager()，而使用getChildFragmentManager()。这样就会找不到缓存的fragment。
3.或者使用FragmentPagerAdapter，在viewpager所在的fragment被detach的时候显示detach viewpager里面的每一个fragment</p>

<p>FragmentPagerAdapter和FragmentStatePagerAdapter区别在于：前者会保存fragment对象，后者仅会保存fragment的状态能进行恢复，占用内存少一些。</p>

<p>官方也有篇讨论帖：看<a href="https://code.google.com/p/android/issues/detail?id=59579&amp;q=FragmentPagerAdapter%20instantiateItem&amp;colspec=ID%20Type%20Status%20Owner%20Summary%20Stars">这里</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android子view的pressed状态受父view的clickable影响分析]]></title>
    <link href="http://cloudmusic.github.io/blog/2014/10/10/android-view-pressed/"/>
    <updated>2014-10-10T14:36:17+08:00</updated>
    <id>http://cloudmusic.github.io/blog/2014/10/10/android-view-pressed</id>
    <content type="html"><![CDATA[<p>android从sdk16开始，修改了onTouchEvent的ACTION_DOWN代码(<a href="http://stackoverflow.com/questions/14179431/android-child-view-sharing-pressed-state-from-its-parent-view-in-jelly-bean">Android: Child elements sharing pressed state with their parent even when duplicateParentState specified</a>)，如下：</p>

<p>sdk16以前：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">case</span> <span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_DOWN</span><span class="o">:</span>
</span><span class='line'>            <span class="n">mHasPerformedLongPress</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">performButtonActionOnTouchDown</span><span class="o">(</span><span class="n">event</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">break</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Walk up the hierarchy to determine if we&#39;re inside a scrolling container.</span>
</span><span class='line'>            <span class="kt">boolean</span> <span class="n">isInScrollingContainer</span> <span class="o">=</span> <span class="n">isInScrollingContainer</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// For views inside a scrolling container, delay the pressed feedback for</span>
</span><span class='line'>            <span class="c1">// a short period in case this is a scroll.</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">isInScrollingContainer</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">mPrivateFlags</span> <span class="o">|=</span> <span class="n">PREPRESSED</span><span class="o">;</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">mPendingCheckForTap</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">mPendingCheckForTap</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">CheckForTap</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">postDelayed</span><span class="o">(</span><span class="n">mPendingCheckForTap</span><span class="o">,</span> <span class="n">ViewConfiguration</span><span class="o">.</span><span class="na">getTapTimeout</span><span class="o">());</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// Not inside a scrolling container, so show the feedback right away</span>
</span><span class='line'>                <span class="n">mPrivateFlags</span> <span class="o">|=</span> <span class="n">PRESSED</span><span class="o">;</span> <span class="c1">//comment by bran</span>
</span><span class='line'>                <span class="n">refreshDrawableState</span><span class="o">();</span>
</span><span class='line'>                <span class="n">checkForLongClick</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">sdk16及以后</span><span class="err">：</span>
</span></code></pre></td></tr></table></div></figure>


<p>java
    case MotionEvent.ACTION_DOWN:
                mHasPerformedLongPress = false;</p>

<pre><code>            if (performButtonActionOnTouchDown(event)) {
                break;
            }

            // Walk up the hierarchy to determine if we're inside a scrolling container.
            boolean isInScrollingContainer = isInScrollingContainer();

            // For views inside a scrolling container, delay the pressed feedback for
            // a short period in case this is a scroll.
            if (isInScrollingContainer) {
                mPrivateFlags |= PFLAG_PREPRESSED;
                if (mPendingCheckForTap == null) {
                    mPendingCheckForTap = new CheckForTap();
                }
                postDelayed(mPendingCheckForTap, ViewConfiguration.getTapTimeout());
            } else {
                // Not inside a scrolling container, so show the feedback right away
                setPressed(true);
                checkForLongClick(0);
            }
            break;
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">后者会调用setPressed方法</span><span class="err">，</span><span class="n">代码如下</span><span class="err">：</span>
</span></code></pre></td></tr></table></div></figure>


<p>java</p>

<pre><code>public void setPressed(boolean pressed) {
    final boolean needsRefresh = pressed != ((mPrivateFlags &amp; PFLAG_PRESSED) == PFLAG_PRESSED);

    if (pressed) {
        mPrivateFlags |= PFLAG_PRESSED;
    } else {
        mPrivateFlags &amp;= ~PFLAG_PRESSED;
    }

    if (needsRefresh) {
        refreshDrawableState();
    }
    dispatchSetPressed(pressed);
}

//viewgroup的实现
protected void dispatchSetPressed(boolean pressed) {
    final View[] children = mChildren;
    final int count = mChildrenCount;
    for (int i = 0; i &lt; count; i++) {
        final View child = children[i];
        // Children that are clickable on their own should not
        // show a pressed state when their parent view does.
        // Clearing a pressed state always propagates.
        if (!pressed || (!child.isClickable() &amp;&amp; !child.isLongClickable())) {
            child.setPressed(pressed);
        }
    }
}
</code></pre>

<p>&#8220;`</p>

<p>可以看出sdk16以后如果子view是!isClickable，父view是isClickable（父view如果是!isClickable都不会处理ACTION_DOWN事件），则即使在子view区域外的点击也会触发子view的pressed行为。这样改的原因不得而知，但个人觉得这不是正常期望的，UI表现上来看，父view点击任何区域子view都会触发pressed。</p>

<p>这种情景是存在的，比如子view是不可点，但又要设置父view可点以防点击父view会触发父父view事件。如果要处理这种情况，父view可以覆盖dispatchSetPressed方法进行重写，或者直接父view设置setEnable(false)。</p>
]]></content>
  </entry>
  
</feed>
